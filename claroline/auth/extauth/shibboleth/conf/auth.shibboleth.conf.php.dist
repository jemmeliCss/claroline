<?php

class shibbolethAuthDriver extends AbstractAuthDriver
{
    
    public function getAuthSource()
    {
        return 'shibboleth';
    }
    
    public function setAuthenticationParams( $username, $password )
    {
        $this->username = $username;
        
        if ( get_conf('userPasswordCrypted',false) )
        {
            $this->password = md5($password);
        }
        else
        {
            $this->password = $password;
        }
    }
    
    public function authenticate( $userData = null )
    {
        $tbl = claro_sql_get_main_tbl();
        
        $sql = "SELECT user_id, username, password, authSource\n"
            . "FROM `{$tbl['user']}`\n"
            . "WHERE "
            . ( get_conf('claro_authUsernameCaseSensitive',true) ? 'BINARY ' : '')
            . "username = ". Claroline::getDatabase()->quote($this->username) . "\n"
            . "AND authSource = '{$this->getAuthSource()
            }'". "\n"
            . "ORDER BY user_id DESC LIMIT 1"
            ;

        // error_log( $sql );
            
        $userDataList = Claroline::getDatabase()->query( $sql );
        if ( $userDataList->numRows() > 0 )
        {
            $userData = $userDataList->fetch();
            $this->userId = $userData['user_id'];
            
            return true;
        }
        else
        {
            $return = user_create(
              array(    'lastname' =>  $userData['lastName']
                    ,   'firstname' => $userData['firstName']
                    ,   'username' => $userData['userID']
                    ,   'officialCode' => ''
                    ,   'email' => $userData['email']
                    ,   'password' => ''
                   )
            );
            
            if( $return )
            {
                $this->userId = $return;
                
                $tbl = claro_sql_get_main_tbl();                
                
                Claroline::getDatabase()->exec("
                    UPDATE
                        `" . $tbl['user'] . "`
                    SET
                        `authSource` = '{$this->getAuthSource()}'
                    WHERE
                        `user_id` = " . (int) $this->userId . "
                ");
                
                return true;
            }
            else
            {
                return false;
            }
        }
    }
    
    public function getUserId()
    {
        return $this->userId;
    }
    
    public function getUserData()
    {
        return $this->getUser()->getRawData();
    }
}

class shibbolethDriver extends sso
{
    private $driver;
    
    public function __construct( $driver )
    {
        $this->driver = $driver;
    }
    
    public function getAuthSource()
    {
        return 'shibboleth';
    }
    
    private function samlEncodeMessage( $msg )
    {
        $encmsg= utf8_encode( $msg );
        $encmsg = base64_encode($encmsg);
     
        return $encmsg;
    }
    
    private function base64url_encode( $plainText )
    {
        $base64 = base64_encode( $plainText );
        $base64url = strtr( $base64, '+/', '-_');
        return $base64url;
    }
    
    public function displayAuthForm()
    {
        $now = time();
        $_SESSION['shibboleth']['session_id'] = 'id_' . $now;
        $issuedate=date('c', $now);
        $samlRequest = '<samlp:AuthnRequest
            xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
            xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
            ID="id_' . $now .'"
            Version="2.0"
            IssueInstant="' . $issuedate . '"
            AssertionConsumerServiceIndex="0"
            AttributeConsumingServiceIndex="0"
            >
                <saml:Issuer>http://130.104.58.231/claroline/</saml:Issuer>                
            </samlp:AuthnRequest>';
        
        $samlRequest = $this->samlEncodeMessage($samlRequest);
        
        $out = '';
        
        
        $out .= '<form method="POST" action="' . $this->driver['url'] . '">' . "\n"
        .   '<input type="hidden" name="SAMLRequest" value="' . $samlRequest . '">' . "\n"
        .   '<input type="hidden" name="RelayState" value="target"/>' . "\n"
        .   '<input type="submit" value="' . $this->driver['name'] . '" />' . "\n"
        .   '</form>' . "\n"
        ;
        
        return $out;
    }
}

// Driver definition
$driverConfig['shibboleth']['driver'] = array(
    'enabled' => true,
    'url' =>  'https://pcwin889.win.tue.nl:8443/idp/profile/SAML2/POST/SSO',
    'name'=> 'Grapple Login (Shibboleth)',
    'class' => 'shibbolethDriver'
);

?>